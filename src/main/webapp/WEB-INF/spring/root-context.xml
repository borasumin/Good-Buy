<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- * DataSource 등록
		   DataSource는 서버 구동 시 동시에 연결이 되어야 하며 연결 저보 설정시 root-context 가장 위에 작성
		   (그래야 아래 설정들에서 DataSource를 참조해서 사용할 수 있음) -->
	<!-- BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		<property> =>setter를 이용한 value 세팅
	 -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
 -->	
	<!-- log4jdbc-remix 설정을 위해 기존 dataSource id 변경 후 해당 빈을 참조하는 proxyDataSource만들기 -->
 	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="goodbuy"/>
		<property name="password" value="goodbuy"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied"/>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="[SQL]"/>
			</bean>
		</property>
	</bean>

	<!-- *mybatis SqlSession 등록 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- mybatis-config.xml설정 불러오기 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 최종적으로 활용할 bean은 sqlSessionTemplate
       <constructor-arg> : 생성자를 이용한 값 세팅 -->
   <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="sqlSession"/>
   </bean>
   
   <!-- 파일 업로드 관련 Bean 등록 -->
   <!-- MultipartResolver -->
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   		<property name="maxUploadSize" value="100000000"/>
   		<property name="maxInMemorySize" value="100000000"/>
   </bean>
   
   <!-- maxUploadSize : 한 요청당 업로드가 허용되는 최대 용량을 바이트 단위로 설정 
   						-1은 제한이 없다는 뜻으로 이 프로퍼티를 지정하지 않았을 때의 기본 값
   		maxInMemorySize : 디스크에 저장하지 않고 메모리에 유지하도록 허용하는 바이트 단위의 최대 용량을 설정
   		기본값 10240 바이트.-->
</beans>
