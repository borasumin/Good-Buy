<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<resultMap type="member" id="memberResultSet">
		<id property = "user_id" column ="USER_ID"/>
		<result property="user_pwd" column="USER_PWD"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="email" column="EMAIL"/>
		<result property="photo" column="PHOTO"/>
		<result property="phone" column="PHONE"/>
		<result property="point" column="POINT"/>
		<result property="reported" column="REPORTED"/>
		<result property="user_type" column="USER_TYPE"/>
		<result property="enroll_date" column="ENROLL_DATE"/>
		<result property="admin_memo" column="ADMIN_MEMO"/>
		<result property="ustatus" column="USTATUS"/>
		<result property="is_business" column="IS_BUSINESS"/>
	</resultMap>
	
	<resultMap type="Keyword" id="keywordResultSet">
		<id property="user_id" column="USER_ID"/>
		<result property="keyword" column="KEYWORD"/>
		<result property="createDate" column="CREATE_DATE"/>
	</resultMap>
	
	<resultMap type="Reply" id="replyResultSet">
		<id property="rno" column="R_NO"/>
		<result property="rcontent" column="RCONTENT"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="rstatus" column="R_STATUS"/>
		<result property="ref_rid" column="REF_RID"/>
		<result property="user_id" column="USER_ID"/>
		<result property="gtitle" column="G_TITLE"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="gno" column="G_NO"/>
	</resultMap>
	
	
	<select id="selectMember" parameterType="Member" resultMap="memberResultSet">
		SELECT
			   USER_ID
			 , USER_PWD
			 , NICKNAME
			 , EMAIL
			 , PHOTO
			 , POINT
			 , PHONE
			 , REPORTED
			 , USER_TYPE
			 , ADMIN_MEMO
			 , ENROLL_DATE
			 , IS_BUSINESS
			 , USTATUS
		  FROM
		  	   USER_INFO
		 WHERE
		 	   USER_ID = #{user_id}
		<!--  암호화 적용 이후 삭제 : AND PWD = #{pwd} -->
		   AND USTATUS = 'Y'
	
	</select>
	<insert id="insertMember" parameterType="Member">
	INSERT
	INTO USER_INFO
	(
	  USER_ID
	, USER_PWD
	, NICKNAME
	, EMAIL
	, PHONE
	, USER_TYPE
	, ENROLL_DATE
	, IS_BUSINESS
	, USTATUS
	)
	VALUES
	(
	  #{ user_id }
	, #{ user_pwd }
	, #{ nickname}
	, #{ email}
	, #{ phone}
	, DEFAULT
	, SYSDATE
	, DEFAULT	
	, DEFAULT
	)
	
	</insert>
	
   
   <select id="selectList" resultMap="memberResultSet">
      SELECT
             USER_ID
			 , USER_PWD
			 , NICKNAME
			 , EMAIL
			 , PHOTO
			 , POINT
			 , PHONE
			 , REPORTED
			 , USER_TYPE
			 , ADMIN_MEMO
			 , ENROLL_DATE
			 , IS_BUSINESS
			 , USTATUS
       FROM
             USER_INFO
      WHERE
               USTATUS = 'Y'
     ORDER BY
              USER_ID DESC
   
   </select>
   
   <select id="selectListCount" resultType="_int">
      SELECT 
            COUNT(*)
          FROM
                USER_INFO
         WHERE
               USTATUS = 'Y' OR USTATUS = 'N'
   </select>
    
   <select id="searchList" parameterType="Search" resultMap="memberResultSet">
		<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		
		SELECT
		     USER_ID
			 , USER_PWD
			 , NICKNAME
			 , EMAIL
			 , PHOTO
			 , POINT
			 , PHONE
			 , REPORTED
			 , USER_TYPE
			 , ADMIN_MEMO
			 , ENROLL_DATE
			 , IS_BUSINESS
			 , USTATUS
		  FROM
		       USER_INFO
		<where>
			<choose>
				<when test="searchCondition == 'common'">
				AND (USER_ID LIKE #{sv} AND IS_BUSINESS LIKE 'N' AND ENROLL_DATE between #{date1} and #{date2})
				</when>
				<when test="searchCondition == 'business'">
				AND (USER_ID LIKE #{sv} AND IS_BUSINESS LIKE 'Y')
				</when>
			</choose>
		</where>
		ORDER BY USER_ID ASC
	</select>
	<select id="selectMemberDetail" parameterType="string" resultMap="memberResultSet">
		SELECT
		     USER_ID
			 , USER_PWD
			 , NICKNAME
			 , EMAIL
			 , PHOTO
			 , POINT
			 , PHONE
			 , REPORTED
			 , USER_TYPE
			 , ADMIN_MEMO
			 , ENROLL_DATE
			 , IS_BUSINESS
			 , USTATUS
		  FROM
		       USER_INFO
		 WHERE
		       USER_ID = #{user_id} 
	</select>
	
	<select id="userIdCheck" parameterType="string" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		USER_INFO
		 WHERE
		 		USER_ID = #{user_id}
		   AND
		   		USTATUS = 'Y'
	</select>

	<update id="updateadminMember" parameterType="Member">
      UPDATE
           USER_INFO
        SET
            POINT = #{point}
          , ADMIN_MEMO = #{admin_memo}
       WHERE
            USER_ID = #{user_id}     
   </update>

	
	<update id="updateMember" parameterType="Member">
		UPDATE 
				USER_INFO
		   SET 
		   		NICKNAME = #{nickname},
      			USER_PWD = #{user_pwd},
   			    EMAIL = #{email},
    			PHONE = #{phone}
		 WHERE 
		 		USER_ID = #{user_id}

	</update>
	
	<update id="updateUserPhoto" parameterType="Member">
		UPDATE
				USER_INFO
		   SET
		   		PHOTO = #{photo}
		 WHERE
		 		USER_ID = #{user_id}
	</update>
	
	<update id="deleteUserPhoto" parameterType="Member">
		UPDATE
				USER_INFO
		   SET
		   		PHOTO = NULL
		 WHERE
		 		USER_ID = #{user_id}
	
	</update>
	
	<update id="updatePoint" parameterType="java.util.Map">
		UPDATE
				USER_INFO
		   SET
		   		POINT = POINT-#{user_point}
		 WHERE
		 		USER_ID = #{user_id}
	
	</update>
	<insert id="insertDeal" parameterType="java.util.Map">
		INSERT ALL
		INTO PAYMENT
		(
 		  PID
		, PAYMENT
		, PAY_DATE
		, PAY_WAY
		)
		VALUES
		(
		  PAY_SEQ.NEXTVAL
		, #{amount}
		, DEFAULT
		, 1
		)
		INTO DEAL_PAYMENT
		(
		  PID
		, G_NO
		, USER_ID
		)
		VALUES
		(
		  PAY_SEQ.CURRVAL
		 , #{gno}
		,  #{user_id}
		)
		INTO ALARM
		(
		  ALARM_NO
		, ALARM_TYPE
		, USER_ID
		, ALARM_DATE
		, REF_NO
		)
		VALUES
		(
		  A_SEQ.NEXTVAL
		, 10
		, (SELECT USER_ID FROM GOODS WHERE G_NO = #{gno})
		, DEFAULT
		, #{gno}
		)
		SELECT *FROM DUAL
	</insert>
	<insert id="insertDealPoint" parameterType="java.util.Map">
		INSERT ALL
		INTO PAYMENT
		(
 		  PID
		, PAYMENT
		, PAY_DATE
		, PAY_WAY
		)
		VALUES
		(
		  PAY_SEQ.NEXTVAL
		, #{amount}
		, DEFAULT
		, 2
		)
		INTO DEAL_PAYMENT
		(
		  PID
		, G_NO
		, USER_ID
		, DEAL_DATE
		)
		VALUES
		(
		  PAY_SEQ.CURRVAL
		 , #{gno}
		,  #{user_id}
		, DEFAULT
		)
		
		SELECT *FROM DUAL
	</insert>
	<select id="selectSellerPhoto" parameterType="string" resultType="string">
		SELECT
			   PHOTO
		  FROM USER_INFO
		 WHERE USER_ID = #{user_id}
	</select>
	
	<update id="deleteMember" parameterType="string">
	UPDATE 
			USER_INFO 
	   SET 
	   		USTATUS = 'N'
	 WHERE 
	 		USER_ID = #{user_id}
	</update>
	
	<insert id="insertKeyword" parameterType="Keyword">
		INSERT INTO KEYWORD
		VALUES(
			#{user_id}
		  , #{keyword}
		  , DEFAULT
		)
	
	</insert>
	
	<select id="selectKeyword" parameterType="string" resultMap="keywordResultSet">
		SELECT
				USER_ID
			  , KEYWORD
			  , CREATE_DATE
		  FROM
		  		KEYWORD
		 WHERE
		 		USER_ID = #{user_id}
	</select>

	<select id="selectReplyCount" parameterType="string" resultType="_int">
	SELECT 
			COUNT(R_NO)
	  FROM 	
	  		REPLY
	 WHERE 
	 		USER_ID = #{user_id}
	   AND
	   		R_STATUS = 'Y'
	</select>
	
	<select id="selectReplyList" parameterType="string" resultMap="replyResultSet">
	SELECT 
			R_NO,REPLY.CREATE_DATE,G_NO,G_TITLE,RCONTENT,CHANGE_NAME
	  FROM 
	  		REPLY
	  JOIN 
	  		GOODS_REPLY USING(R_NO)
	  JOIN 
	  		GOODS USING(G_NO)
	  JOIN 
	  		GOODSFILE USING(G_NO)
	  JOIN 
	  		ADDFILE USING(F_NO)
	 WHERE 
	 		REPLY.USER_ID = #{user_id}
	   AND
	   		R_STATUS = 'Y'
	
	</select>
	
	<update id="deleteReply" parameterType="Reply">
	UPDATE 
			REPLY
	   SET 
	   		R_STATUS = 'N'
	 WHERE
	 	   	USER_ID = #{user_id}
	   AND 
	   		R_NO = #{rno}
	
	
	
	</update>
	<insert id="insertFollow"  parameterType="java.util.Map">
	INSERT INTO
	FOLLOW
	(FOLLOWER, FOLLOWING)
	VALUES
	(#{user_id}, #{seller})
	
	</insert>
	<select id="isFollow" parameterType="java.util.Map" resultType="_int">
		SELECT COUNT(*)
		  FROM FOLLOW
		 WHERE FOLLOWER =#{user_id}
		   AND FOLLOWING =#{seller}
	</select>
	<delete id="canselFollow" parameterType="java.util.Map">
		DELETE FROM FOLLOW 
	    WHERE FOLLOWER = #{user_id}
   		  AND FOLLOWING = #{seller}
	
	</delete>
</mapper>